// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gqlgen

import (
	"context"

	"github.com/kauche/kauche-microservices-example/api/services/customer/graphql/gqlgen/model"
)

func NewResolver(
	entity EntityResolver,
	query QueryResolver,
) *Resolver {
	return &Resolver{
		entityResolver: &entityResolver{resolver: entity},
		queryResolver:  &queryResolver{resolver: query},
	}
}

type Resolver struct {
	entityResolver EntityResolver
	queryResolver  QueryResolver
}

func (r *entityResolver) FindProductByID(ctx context.Context, id string) (*model.Product, error) {
	return r.resolver.FindProductByID(ctx, id)
}

func (r *queryResolver) Products(ctx context.Context) ([]*model.Product, error) {
	return r.resolver.Products(ctx)
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return r.entityResolver }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return r.queryResolver }

type entityResolver struct{ resolver EntityResolver }
type queryResolver struct{ resolver QueryResolver }
